# The name of the workflow
name: Test and Deploy

# This workflow will run on any push to the repository
on: push

jobs:
  test:
    # Similar to docker, we set up a virtual machine to run our tests
    runs-on: ubuntu-latest

    steps:
      # Each step has a name, some code, and some options
      - name: Check out the code
        uses: actions/checkout@v3 # This is a reference to some code to run

      # This step installs the Python version we want
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # This step installs pip and our dependencies
      - name: Install dependencies
        run: | # Note that there's no reference here â€” just commands to run
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Now we run our tests
      - name: Test with pytest
        run: |
          pytest

  deploy:
    # If we're running on the main branch (not a PR)
    if: github.ref == 'refs/heads/main'

    # And the tests have run
    needs: test

    # And no other deploy jobs are running
    concurrency: production

    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      # For exoframe we need NodeJS
      - name: Set up Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      # We install exoframe
      - name: Install exoframe
        run: npm install -g exoframe

      # And deploy using our secret token
      - name: Deploy to production
        run: |
          exoframe deploy --token ${{ secrets.EXOFRAME_TOKEN }} --endpoint "https://exoframe.xf.mkrs.link" --update
